//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.14 at 09:36:22 PM UTC 
//


package com.io7m.jdae.collada1_5.mathml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for named-space.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;simpleType name="named-space"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="veryverythinmathspace"/&gt;
 *     &lt;enumeration value="verythinmathspace"/&gt;
 *     &lt;enumeration value="thinmathspace"/&gt;
 *     &lt;enumeration value="mediummathspace"/&gt;
 *     &lt;enumeration value="thickmathspace"/&gt;
 *     &lt;enumeration value="verythickmathspace"/&gt;
 *     &lt;enumeration value="veryverythickmathspace"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "named-space")
@XmlEnum
public enum NamedSpace {

    @XmlEnumValue("veryverythinmathspace")
    VERYVERYTHINMATHSPACE("veryverythinmathspace"),
    @XmlEnumValue("verythinmathspace")
    VERYTHINMATHSPACE("verythinmathspace"),
    @XmlEnumValue("thinmathspace")
    THINMATHSPACE("thinmathspace"),
    @XmlEnumValue("mediummathspace")
    MEDIUMMATHSPACE("mediummathspace"),
    @XmlEnumValue("thickmathspace")
    THICKMATHSPACE("thickmathspace"),
    @XmlEnumValue("verythickmathspace")
    VERYTHICKMATHSPACE("verythickmathspace"),
    @XmlEnumValue("veryverythickmathspace")
    VERYVERYTHICKMATHSPACE("veryverythickmathspace");
    private final String value;

    NamedSpace(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static NamedSpace fromValue(String v) {
        for (NamedSpace c: NamedSpace.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
