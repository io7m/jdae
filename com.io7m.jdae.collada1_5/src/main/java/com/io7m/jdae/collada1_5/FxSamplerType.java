//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.14 at 09:36:22 PM UTC 
//


package com.io7m.jdae.collada1_5;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * Sampling state that can be sharable between samplers because there is often heavy re-use
 * 
 * <p>Java class for fx_sampler_type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="fx_sampler_type">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="instance_image" type="{http://www.collada.org/2008/03/COLLADASchema}instance_image_type" minOccurs="0"/>
 *         &lt;group ref="{http://www.collada.org/2008/03/COLLADASchema}fx_sampler_states_group"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "fx_sampler_type", propOrder = {
    "instanceImage",
    "wrapS",
    "wrapT",
    "wrapP",
    "minfilter",
    "magfilter",
    "mipfilter",
    "borderColor",
    "mipMaxLevel",
    "mipMinLevel",
    "mipBias",
    "maxAnisotropy",
    "extra"
})
@XmlSeeAlso({
    FxSamplerRECTType.class,
    FxSampler1DType.class,
    FxSamplerCUBEType.class,
    FxSampler2DType.class,
    FxSampler3DType.class,
    FxSamplerDEPTHType.class
})
public class FxSamplerType {

    @XmlElement(name = "instance_image")
    protected InstanceImageType instanceImage;
    @XmlElement(name = "wrap_s", defaultValue = "WRAP")
    @XmlSchemaType(name = "NMTOKEN")
    protected FxSamplerWrapEnum wrapS;
    @XmlElement(name = "wrap_t", defaultValue = "WRAP")
    @XmlSchemaType(name = "NMTOKEN")
    protected FxSamplerWrapEnum wrapT;
    @XmlElement(name = "wrap_p", defaultValue = "WRAP")
    @XmlSchemaType(name = "NMTOKEN")
    protected FxSamplerWrapEnum wrapP;
    @XmlElement(defaultValue = "LINEAR")
    @XmlSchemaType(name = "NMTOKEN")
    protected FxSamplerMinFilterEnum minfilter;
    @XmlElement(defaultValue = "LINEAR")
    @XmlSchemaType(name = "NMTOKEN")
    protected FxSamplerMagFilterEnum magfilter;
    @XmlElement(defaultValue = "LINEAR")
    @XmlSchemaType(name = "NMTOKEN")
    protected FxSamplerMipFilterEnum mipfilter;
    @XmlList
    @XmlElement(name = "border_color", type = Double.class)
    @XmlSchemaType(name = "anySimpleType")
    protected List<Double> borderColor;
    @XmlElement(name = "mip_max_level", defaultValue = "0")
    @XmlSchemaType(name = "unsignedByte")
    protected Short mipMaxLevel;
    @XmlElement(name = "mip_min_level", defaultValue = "0")
    @XmlSchemaType(name = "unsignedByte")
    protected Short mipMinLevel;
    @XmlElement(name = "mip_bias", defaultValue = "0.0")
    protected Float mipBias;
    @XmlElement(name = "max_anisotropy", defaultValue = "1")
    @XmlSchemaType(name = "unsignedInt")
    protected Long maxAnisotropy;
    protected List<ExtraType> extra;

    /**
     * Gets the value of the instanceImage property.
     * 
     * @return
     *     possible object is
     *     {@link InstanceImageType }
     *     
     */
    public InstanceImageType getInstanceImage() {
        return instanceImage;
    }

    /**
     * Sets the value of the instanceImage property.
     * 
     * @param value
     *     allowed object is
     *     {@link InstanceImageType }
     *     
     */
    public void setInstanceImage(InstanceImageType value) {
        this.instanceImage = value;
    }

    /**
     * Gets the value of the wrapS property.
     * 
     * @return
     *     possible object is
     *     {@link FxSamplerWrapEnum }
     *     
     */
    public FxSamplerWrapEnum getWrapS() {
        return wrapS;
    }

    /**
     * Sets the value of the wrapS property.
     * 
     * @param value
     *     allowed object is
     *     {@link FxSamplerWrapEnum }
     *     
     */
    public void setWrapS(FxSamplerWrapEnum value) {
        this.wrapS = value;
    }

    /**
     * Gets the value of the wrapT property.
     * 
     * @return
     *     possible object is
     *     {@link FxSamplerWrapEnum }
     *     
     */
    public FxSamplerWrapEnum getWrapT() {
        return wrapT;
    }

    /**
     * Sets the value of the wrapT property.
     * 
     * @param value
     *     allowed object is
     *     {@link FxSamplerWrapEnum }
     *     
     */
    public void setWrapT(FxSamplerWrapEnum value) {
        this.wrapT = value;
    }

    /**
     * Gets the value of the wrapP property.
     * 
     * @return
     *     possible object is
     *     {@link FxSamplerWrapEnum }
     *     
     */
    public FxSamplerWrapEnum getWrapP() {
        return wrapP;
    }

    /**
     * Sets the value of the wrapP property.
     * 
     * @param value
     *     allowed object is
     *     {@link FxSamplerWrapEnum }
     *     
     */
    public void setWrapP(FxSamplerWrapEnum value) {
        this.wrapP = value;
    }

    /**
     * Gets the value of the minfilter property.
     * 
     * @return
     *     possible object is
     *     {@link FxSamplerMinFilterEnum }
     *     
     */
    public FxSamplerMinFilterEnum getMinfilter() {
        return minfilter;
    }

    /**
     * Sets the value of the minfilter property.
     * 
     * @param value
     *     allowed object is
     *     {@link FxSamplerMinFilterEnum }
     *     
     */
    public void setMinfilter(FxSamplerMinFilterEnum value) {
        this.minfilter = value;
    }

    /**
     * Gets the value of the magfilter property.
     * 
     * @return
     *     possible object is
     *     {@link FxSamplerMagFilterEnum }
     *     
     */
    public FxSamplerMagFilterEnum getMagfilter() {
        return magfilter;
    }

    /**
     * Sets the value of the magfilter property.
     * 
     * @param value
     *     allowed object is
     *     {@link FxSamplerMagFilterEnum }
     *     
     */
    public void setMagfilter(FxSamplerMagFilterEnum value) {
        this.magfilter = value;
    }

    /**
     * Gets the value of the mipfilter property.
     * 
     * @return
     *     possible object is
     *     {@link FxSamplerMipFilterEnum }
     *     
     */
    public FxSamplerMipFilterEnum getMipfilter() {
        return mipfilter;
    }

    /**
     * Sets the value of the mipfilter property.
     * 
     * @param value
     *     allowed object is
     *     {@link FxSamplerMipFilterEnum }
     *     
     */
    public void setMipfilter(FxSamplerMipFilterEnum value) {
        this.mipfilter = value;
    }

    /**
     * Gets the value of the borderColor property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the borderColor property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBorderColor().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Double }
     * 
     * 
     */
    public List<Double> getBorderColor() {
        if (borderColor == null) {
            borderColor = new ArrayList<Double>();
        }
        return this.borderColor;
    }

    /**
     * Gets the value of the mipMaxLevel property.
     * 
     * @return
     *     possible object is
     *     {@link Short }
     *     
     */
    public Short getMipMaxLevel() {
        return mipMaxLevel;
    }

    /**
     * Sets the value of the mipMaxLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link Short }
     *     
     */
    public void setMipMaxLevel(Short value) {
        this.mipMaxLevel = value;
    }

    /**
     * Gets the value of the mipMinLevel property.
     * 
     * @return
     *     possible object is
     *     {@link Short }
     *     
     */
    public Short getMipMinLevel() {
        return mipMinLevel;
    }

    /**
     * Sets the value of the mipMinLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link Short }
     *     
     */
    public void setMipMinLevel(Short value) {
        this.mipMinLevel = value;
    }

    /**
     * Gets the value of the mipBias property.
     * 
     * @return
     *     possible object is
     *     {@link Float }
     *     
     */
    public Float getMipBias() {
        return mipBias;
    }

    /**
     * Sets the value of the mipBias property.
     * 
     * @param value
     *     allowed object is
     *     {@link Float }
     *     
     */
    public void setMipBias(Float value) {
        this.mipBias = value;
    }

    /**
     * Gets the value of the maxAnisotropy property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getMaxAnisotropy() {
        return maxAnisotropy;
    }

    /**
     * Sets the value of the maxAnisotropy property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setMaxAnisotropy(Long value) {
        this.maxAnisotropy = value;
    }

    /**
     * Gets the value of the extra property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extra property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtra().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExtraType }
     * 
     * 
     */
    public List<ExtraType> getExtra() {
        if (extra == null) {
            extra = new ArrayList<ExtraType>();
        }
        return this.extra;
    }

}
