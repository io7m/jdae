//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.14 at 09:36:22 PM UTC 
//


package com.io7m.jdae.collada1_5.mathml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.io7m.jdae.collada1_5.mathml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Matrixrow_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "matrixrow");
    private final static QName _Diff_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "diff");
    private final static QName _Mtext_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mtext");
    private final static QName _Munder_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "munder");
    private final static QName _Malignmark_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "malignmark");
    private final static QName _In_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "in");
    private final static QName _Msqrt_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "msqrt");
    private final static QName _Math_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "math");
    private final static QName _Domainofapplication_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "domainofapplication");
    private final static QName _Interval_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "interval");
    private final static QName _Complexes_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "complexes");
    private final static QName _Card_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "card");
    private final static QName _Mspace_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mspace");
    private final static QName _Setdiff_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "setdiff");
    private final static QName _Compose_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "compose");
    private final static QName _Domain_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "domain");
    private final static QName _Exponentiale_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "exponentiale");
    private final static QName _Gcd_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "gcd");
    private final static QName _None_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "none");
    private final static QName _Semantics_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "semantics");
    private final static QName _Arccot_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccot");
    private final static QName _Integers_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "integers");
    private final static QName _Arccos_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccos");
    private final static QName _Tendsto_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "tendsto");
    private final static QName _Mglyph_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mglyph");
    private final static QName _Equivalent_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "equivalent");
    private final static QName _Sech_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sech");
    private final static QName _Curl_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "curl");
    private final static QName _Ident_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "ident");
    private final static QName _Leq_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "leq");
    private final static QName _Momentabout_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "momentabout");
    private final static QName _Exp_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "exp");
    private final static QName _Factorof_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "factorof");
    private final static QName _Mtable_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mtable");
    private final static QName _Conjugate_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "conjugate");
    private final static QName _Lambda_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "lambda");
    private final static QName _Cn_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "cn");
    private final static QName _Union_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "union");
    private final static QName _Emptyset_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "emptyset");
    private final static QName _Notanumber_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "notanumber");
    private final static QName _Maligngroup_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "maligngroup");
    private final static QName _Annotation_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "annotation");
    private final static QName _Set_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "set");
    private final static QName _Product_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "product");
    private final static QName _Max_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "max");
    private final static QName _Forall_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "forall");
    private final static QName _Ci_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "ci");
    private final static QName _Exists_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "exists");
    private final static QName _Uplimit_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "uplimit");
    private final static QName _Infinity_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "infinity");
    private final static QName _Notin_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "notin");
    private final static QName _Implies_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "implies");
    private final static QName _Partialdiff_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "partialdiff");
    private final static QName _Mrow_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mrow");
    private final static QName _Merror_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "merror");
    private final static QName _Grad_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "grad");
    private final static QName _Logbase_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "logbase");
    private final static QName _Abs_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "abs");
    private final static QName _Notprsubset_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "notprsubset");
    private final static QName _Arccosh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccosh");
    private final static QName _Scalarproduct_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "scalarproduct");
    private final static QName _AnnotationXml_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "annotation-xml");
    private final static QName _Sum_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sum");
    private final static QName _Piecewise_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "piecewise");
    private final static QName _Matrix_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "matrix");
    private final static QName _Moment_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "moment");
    private final static QName _Minus_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "minus");
    private final static QName _Arccsch_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccsch");
    private final static QName _Primes_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "primes");
    private final static QName _Prsubset_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "prsubset");
    private final static QName _Log_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "log");
    private final static QName _Arcsec_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arcsec");
    private final static QName _Factorial_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "factorial");
    private final static QName _Msubsup_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "msubsup");
    private final static QName _Power_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "power");
    private final static QName _Naturalnumbers_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "naturalnumbers");
    private final static QName _Xor_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "xor");
    private final static QName _Vector_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "vector");
    private final static QName _Sep_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sep");
    private final static QName _Sec_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sec");
    private final static QName _Min_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "min");
    private final static QName _Geq_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "geq");
    private final static QName _Arccoth_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccoth");
    private final static QName _Arg_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arg");
    private final static QName _Arctanh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arctanh");
    private final static QName _Degree_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "degree");
    private final static QName _Eulergamma_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "eulergamma");
    private final static QName _Real_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "real");
    private final static QName _Bvar_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "bvar");
    private final static QName _Mtr_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mtr");
    private final static QName _Eq_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "eq");
    private final static QName _List_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "list");
    private final static QName _Plus_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "plus");
    private final static QName _Mn_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mn");
    private final static QName _Image_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "image");
    private final static QName _Otherwise_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "otherwise");
    private final static QName _Tan_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "tan");
    private final static QName _Mo_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mo");
    private final static QName _Sinh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sinh");
    private final static QName _Ms_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "ms");
    private final static QName _True_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "true");
    private final static QName _Arcsin_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arcsin");
    private final static QName _Mmultiscripts_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts");
    private final static QName _Divergence_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "divergence");
    private final static QName _Outerproduct_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "outerproduct");
    private final static QName _Condition_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "condition");
    private final static QName _Piece_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "piece");
    private final static QName _Median_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "median");
    private final static QName _Cot_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "cot");
    private final static QName _Lt_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "lt");
    private final static QName _Notsubset_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "notsubset");
    private final static QName _Arcsinh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arcsinh");
    private final static QName _Msub_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "msub");
    private final static QName _Ln_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "ln");
    private final static QName _Declare_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "declare");
    private final static QName _Cos_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "cos");
    private final static QName _Csymbol_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "csymbol");
    private final static QName _Limit_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "limit");
    private final static QName _Rem_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "rem");
    private final static QName _Neq_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "neq");
    private final static QName _Arccsc_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arccsc");
    private final static QName _Mi_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mi");
    private final static QName _Mphantom_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mphantom");
    private final static QName _Mtd_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mtd");
    private final static QName _Rationals_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "rationals");
    private final static QName _Mode_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mode");
    private final static QName _Mprescripts_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mprescripts");
    private final static QName _Mlabeledtr_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mlabeledtr");
    private final static QName _Mpadded_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mpadded");
    private final static QName _False_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "false");
    private final static QName _Mfrac_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mfrac");
    private final static QName _Codomain_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "codomain");
    private final static QName _Gt_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "gt");
    private final static QName _Mstyle_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mstyle");
    private final static QName _Imaginaryi_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "imaginaryi");
    private final static QName _Cosh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "cosh");
    private final static QName _Int_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "int");
    private final static QName _Ceiling_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "ceiling");
    private final static QName _Inverse_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "inverse");
    private final static QName _Lowlimit_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "lowlimit");
    private final static QName _Reals_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "reals");
    private final static QName _Or_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "or");
    private final static QName _Apply_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "apply");
    private final static QName _Arcsech_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arcsech");
    private final static QName _Intersect_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "intersect");
    private final static QName _Pi_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "pi");
    private final static QName _Csch_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "csch");
    private final static QName _Transpose_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "transpose");
    private final static QName _Mroot_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mroot");
    private final static QName _Cartesianproduct_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct");
    private final static QName _Approx_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "approx");
    private final static QName _Determinant_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "determinant");
    private final static QName _Vectorproduct_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "vectorproduct");
    private final static QName _Subset_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "subset");
    private final static QName _Quotient_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "quotient");
    private final static QName _Msup_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "msup");
    private final static QName _Menclose_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "menclose");
    private final static QName _Csc_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "csc");
    private final static QName _Mover_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mover");
    private final static QName _Imaginary_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "imaginary");
    private final static QName _Variance_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "variance");
    private final static QName _Arctan_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "arctan");
    private final static QName _Sdev_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sdev");
    private final static QName _Mean_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mean");
    private final static QName _Munderover_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "munderover");
    private final static QName _Coth_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "coth");
    private final static QName _Sin_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "sin");
    private final static QName _Mfenced_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "mfenced");
    private final static QName _Laplacian_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "laplacian");
    private final static QName _Divide_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "divide");
    private final static QName _Selector_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "selector");
    private final static QName _Floor_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "floor");
    private final static QName _Tanh_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "tanh");
    private final static QName _Times_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "times");
    private final static QName _Not_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "not");
    private final static QName _Maction_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "maction");
    private final static QName _Root_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "root");
    private final static QName _Lcm_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "lcm");
    private final static QName _And_QNAME = new QName("http://www.w3.org/1998/Math/MathML", "and");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.io7m.jdae.collada1_5.mathml
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MglyphType }
     * 
     */
    public MglyphType createMglyphType() {
        return new MglyphType();
    }

    /**
     * Create an instance of {@link RelationsType }
     * 
     */
    public RelationsType createRelationsType() {
        return new RelationsType();
    }

    /**
     * Create an instance of {@link ElementaryFunctionsType }
     * 
     */
    public ElementaryFunctionsType createElementaryFunctionsType() {
        return new ElementaryFunctionsType();
    }

    /**
     * Create an instance of {@link CurlType }
     * 
     */
    public CurlType createCurlType() {
        return new CurlType();
    }

    /**
     * Create an instance of {@link FunctionsType }
     * 
     */
    public FunctionsType createFunctionsType() {
        return new FunctionsType();
    }

    /**
     * Create an instance of {@link ArithType }
     * 
     */
    public ArithType createArithType() {
        return new ArithType();
    }

    /**
     * Create an instance of {@link NoneType }
     * 
     */
    public NoneType createNoneType() {
        return new NoneType();
    }

    /**
     * Create an instance of {@link SemanticsType }
     * 
     */
    public SemanticsType createSemanticsType() {
        return new SemanticsType();
    }

    /**
     * Create an instance of {@link TendstoType }
     * 
     */
    public TendstoType createTendstoType() {
        return new TendstoType();
    }

    /**
     * Create an instance of {@link ConstantType }
     * 
     */
    public ConstantType createConstantType() {
        return new ConstantType();
    }

    /**
     * Create an instance of {@link MtableType }
     * 
     */
    public MtableType createMtableType() {
        return new MtableType();
    }

    /**
     * Create an instance of {@link LambdaType }
     * 
     */
    public LambdaType createLambdaType() {
        return new LambdaType();
    }

    /**
     * Create an instance of {@link MomentaboutType }
     * 
     */
    public MomentaboutType createMomentaboutType() {
        return new MomentaboutType();
    }

    /**
     * Create an instance of {@link MalignmarkType }
     * 
     */
    public MalignmarkType createMalignmarkType() {
        return new MalignmarkType();
    }

    /**
     * Create an instance of {@link InType }
     * 
     */
    public InType createInType() {
        return new InType();
    }

    /**
     * Create an instance of {@link MatrixrowType }
     * 
     */
    public MatrixrowType createMatrixrowType() {
        return new MatrixrowType();
    }

    /**
     * Create an instance of {@link DiffType }
     * 
     */
    public DiffType createDiffType() {
        return new DiffType();
    }

    /**
     * Create an instance of {@link MtextType }
     * 
     */
    public MtextType createMtextType() {
        return new MtextType();
    }

    /**
     * Create an instance of {@link MunderType }
     * 
     */
    public MunderType createMunderType() {
        return new MunderType();
    }

    /**
     * Create an instance of {@link MspaceType }
     * 
     */
    public MspaceType createMspaceType() {
        return new MspaceType();
    }

    /**
     * Create an instance of {@link SetdiffType }
     * 
     */
    public SetdiffType createSetdiffType() {
        return new SetdiffType();
    }

    /**
     * Create an instance of {@link MsqrtType }
     * 
     */
    public MsqrtType createMsqrtType() {
        return new MsqrtType();
    }

    /**
     * Create an instance of {@link IntervalType }
     * 
     */
    public IntervalType createIntervalType() {
        return new IntervalType();
    }

    /**
     * Create an instance of {@link MathType }
     * 
     */
    public MathType createMathType() {
        return new MathType();
    }

    /**
     * Create an instance of {@link DomainofapplicationType }
     * 
     */
    public DomainofapplicationType createDomainofapplicationType() {
        return new DomainofapplicationType();
    }

    /**
     * Create an instance of {@link CardType }
     * 
     */
    public CardType createCardType() {
        return new CardType();
    }

    /**
     * Create an instance of {@link PrsubsetType }
     * 
     */
    public PrsubsetType createPrsubsetType() {
        return new PrsubsetType();
    }

    /**
     * Create an instance of {@link PiecewiseType }
     * 
     */
    public PiecewiseType createPiecewiseType() {
        return new PiecewiseType();
    }

    /**
     * Create an instance of {@link MatrixType }
     * 
     */
    public MatrixType createMatrixType() {
        return new MatrixType();
    }

    /**
     * Create an instance of {@link MomentType }
     * 
     */
    public MomentType createMomentType() {
        return new MomentType();
    }

    /**
     * Create an instance of {@link MsubsupType }
     * 
     */
    public MsubsupType createMsubsupType() {
        return new MsubsupType();
    }

    /**
     * Create an instance of {@link LogicType }
     * 
     */
    public LogicType createLogicType() {
        return new LogicType();
    }

    /**
     * Create an instance of {@link VectorType }
     * 
     */
    public VectorType createVectorType() {
        return new VectorType();
    }

    /**
     * Create an instance of {@link SepType }
     * 
     */
    public SepType createSepType() {
        return new SepType();
    }

    /**
     * Create an instance of {@link AnnotationType }
     * 
     */
    public AnnotationType createAnnotationType() {
        return new AnnotationType();
    }

    /**
     * Create an instance of {@link MaligngroupType }
     * 
     */
    public MaligngroupType createMaligngroupType() {
        return new MaligngroupType();
    }

    /**
     * Create an instance of {@link SetType }
     * 
     */
    public SetType createSetType() {
        return new SetType();
    }

    /**
     * Create an instance of {@link CiType }
     * 
     */
    public CiType createCiType() {
        return new CiType();
    }

    /**
     * Create an instance of {@link CnType }
     * 
     */
    public CnType createCnType() {
        return new CnType();
    }

    /**
     * Create an instance of {@link UnionType }
     * 
     */
    public UnionType createUnionType() {
        return new UnionType();
    }

    /**
     * Create an instance of {@link LogbaseType }
     * 
     */
    public LogbaseType createLogbaseType() {
        return new LogbaseType();
    }

    /**
     * Create an instance of {@link NotprsubsetType }
     * 
     */
    public NotprsubsetType createNotprsubsetType() {
        return new NotprsubsetType();
    }

    /**
     * Create an instance of {@link AnnotationXmlType }
     * 
     */
    public AnnotationXmlType createAnnotationXmlType() {
        return new AnnotationXmlType();
    }

    /**
     * Create an instance of {@link ScalarproductType }
     * 
     */
    public ScalarproductType createScalarproductType() {
        return new ScalarproductType();
    }

    /**
     * Create an instance of {@link NotinType }
     * 
     */
    public NotinType createNotinType() {
        return new NotinType();
    }

    /**
     * Create an instance of {@link UplimitType }
     * 
     */
    public UplimitType createUplimitType() {
        return new UplimitType();
    }

    /**
     * Create an instance of {@link MrowType }
     * 
     */
    public MrowType createMrowType() {
        return new MrowType();
    }

    /**
     * Create an instance of {@link MerrorType }
     * 
     */
    public MerrorType createMerrorType() {
        return new MerrorType();
    }

    /**
     * Create an instance of {@link GradType }
     * 
     */
    public GradType createGradType() {
        return new GradType();
    }

    /**
     * Create an instance of {@link PartialdiffType }
     * 
     */
    public PartialdiffType createPartialdiffType() {
        return new PartialdiffType();
    }

    /**
     * Create an instance of {@link MsubType }
     * 
     */
    public MsubType createMsubType() {
        return new MsubType();
    }

    /**
     * Create an instance of {@link DeclareType }
     * 
     */
    public DeclareType createDeclareType() {
        return new DeclareType();
    }

    /**
     * Create an instance of {@link NotsubsetType }
     * 
     */
    public NotsubsetType createNotsubsetType() {
        return new NotsubsetType();
    }

    /**
     * Create an instance of {@link ModeType }
     * 
     */
    public ModeType createModeType() {
        return new ModeType();
    }

    /**
     * Create an instance of {@link MprescriptsType }
     * 
     */
    public MprescriptsType createMprescriptsType() {
        return new MprescriptsType();
    }

    /**
     * Create an instance of {@link MpaddedType }
     * 
     */
    public MpaddedType createMpaddedType() {
        return new MpaddedType();
    }

    /**
     * Create an instance of {@link MlabeledtrType }
     * 
     */
    public MlabeledtrType createMlabeledtrType() {
        return new MlabeledtrType();
    }

    /**
     * Create an instance of {@link LimitType }
     * 
     */
    public LimitType createLimitType() {
        return new LimitType();
    }

    /**
     * Create an instance of {@link CsymbolType }
     * 
     */
    public CsymbolType createCsymbolType() {
        return new CsymbolType();
    }

    /**
     * Create an instance of {@link MiType }
     * 
     */
    public MiType createMiType() {
        return new MiType();
    }

    /**
     * Create an instance of {@link MphantomType }
     * 
     */
    public MphantomType createMphantomType() {
        return new MphantomType();
    }

    /**
     * Create an instance of {@link MtdType }
     * 
     */
    public MtdType createMtdType() {
        return new MtdType();
    }

    /**
     * Create an instance of {@link OtherwiseType }
     * 
     */
    public OtherwiseType createOtherwiseType() {
        return new OtherwiseType();
    }

    /**
     * Create an instance of {@link MnType }
     * 
     */
    public MnType createMnType() {
        return new MnType();
    }

    /**
     * Create an instance of {@link MoType }
     * 
     */
    public MoType createMoType() {
        return new MoType();
    }

    /**
     * Create an instance of {@link MsType }
     * 
     */
    public MsType createMsType() {
        return new MsType();
    }

    /**
     * Create an instance of {@link DegreeType }
     * 
     */
    public DegreeType createDegreeType() {
        return new DegreeType();
    }

    /**
     * Create an instance of {@link MtrType }
     * 
     */
    public MtrType createMtrType() {
        return new MtrType();
    }

    /**
     * Create an instance of {@link BvarType }
     * 
     */
    public BvarType createBvarType() {
        return new BvarType();
    }

    /**
     * Create an instance of {@link ListType }
     * 
     */
    public ListType createListType() {
        return new ListType();
    }

    /**
     * Create an instance of {@link DivergenceType }
     * 
     */
    public DivergenceType createDivergenceType() {
        return new DivergenceType();
    }

    /**
     * Create an instance of {@link ConditionType }
     * 
     */
    public ConditionType createConditionType() {
        return new ConditionType();
    }

    /**
     * Create an instance of {@link OuterproductType }
     * 
     */
    public OuterproductType createOuterproductType() {
        return new OuterproductType();
    }

    /**
     * Create an instance of {@link MedianType }
     * 
     */
    public MedianType createMedianType() {
        return new MedianType();
    }

    /**
     * Create an instance of {@link PieceType }
     * 
     */
    public PieceType createPieceType() {
        return new PieceType();
    }

    /**
     * Create an instance of {@link MmultiscriptsType }
     * 
     */
    public MmultiscriptsType createMmultiscriptsType() {
        return new MmultiscriptsType();
    }

    /**
     * Create an instance of {@link MunderoverType }
     * 
     */
    public MunderoverType createMunderoverType() {
        return new MunderoverType();
    }

    /**
     * Create an instance of {@link MactionType }
     * 
     */
    public MactionType createMactionType() {
        return new MactionType();
    }

    /**
     * Create an instance of {@link MfencedType }
     * 
     */
    public MfencedType createMfencedType() {
        return new MfencedType();
    }

    /**
     * Create an instance of {@link LaplacianType }
     * 
     */
    public LaplacianType createLaplacianType() {
        return new LaplacianType();
    }

    /**
     * Create an instance of {@link SelectorType }
     * 
     */
    public SelectorType createSelectorType() {
        return new SelectorType();
    }

    /**
     * Create an instance of {@link InverseType }
     * 
     */
    public InverseType createInverseType() {
        return new InverseType();
    }

    /**
     * Create an instance of {@link LowlimitType }
     * 
     */
    public LowlimitType createLowlimitType() {
        return new LowlimitType();
    }

    /**
     * Create an instance of {@link IntersectType }
     * 
     */
    public IntersectType createIntersectType() {
        return new IntersectType();
    }

    /**
     * Create an instance of {@link ApplyType }
     * 
     */
    public ApplyType createApplyType() {
        return new ApplyType();
    }

    /**
     * Create an instance of {@link MfracType }
     * 
     */
    public MfracType createMfracType() {
        return new MfracType();
    }

    /**
     * Create an instance of {@link IntType }
     * 
     */
    public IntType createIntType() {
        return new IntType();
    }

    /**
     * Create an instance of {@link MstyleType }
     * 
     */
    public MstyleType createMstyleType() {
        return new MstyleType();
    }

    /**
     * Create an instance of {@link MsupType }
     * 
     */
    public MsupType createMsupType() {
        return new MsupType();
    }

    /**
     * Create an instance of {@link MencloseType }
     * 
     */
    public MencloseType createMencloseType() {
        return new MencloseType();
    }

    /**
     * Create an instance of {@link MoverType }
     * 
     */
    public MoverType createMoverType() {
        return new MoverType();
    }

    /**
     * Create an instance of {@link VarianceType }
     * 
     */
    public VarianceType createVarianceType() {
        return new VarianceType();
    }

    /**
     * Create an instance of {@link MeanType }
     * 
     */
    public MeanType createMeanType() {
        return new MeanType();
    }

    /**
     * Create an instance of {@link SdevType }
     * 
     */
    public SdevType createSdevType() {
        return new SdevType();
    }

    /**
     * Create an instance of {@link MrootType }
     * 
     */
    public MrootType createMrootType() {
        return new MrootType();
    }

    /**
     * Create an instance of {@link CartesianproductType }
     * 
     */
    public CartesianproductType createCartesianproductType() {
        return new CartesianproductType();
    }

    /**
     * Create an instance of {@link TransposeType }
     * 
     */
    public TransposeType createTransposeType() {
        return new TransposeType();
    }

    /**
     * Create an instance of {@link SubsetType }
     * 
     */
    public SubsetType createSubsetType() {
        return new SubsetType();
    }

    /**
     * Create an instance of {@link DeterminantType }
     * 
     */
    public DeterminantType createDeterminantType() {
        return new DeterminantType();
    }

    /**
     * Create an instance of {@link VectorproductType }
     * 
     */
    public VectorproductType createVectorproductType() {
        return new VectorproductType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MatrixrowType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "matrixrow")
    public JAXBElement<MatrixrowType> createMatrixrow(MatrixrowType value) {
        return new JAXBElement<MatrixrowType>(_Matrixrow_QNAME, MatrixrowType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DiffType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "diff")
    public JAXBElement<DiffType> createDiff(DiffType value) {
        return new JAXBElement<DiffType>(_Diff_QNAME, DiffType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MtextType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mtext")
    public JAXBElement<MtextType> createMtext(MtextType value) {
        return new JAXBElement<MtextType>(_Mtext_QNAME, MtextType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MunderType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "munder")
    public JAXBElement<MunderType> createMunder(MunderType value) {
        return new JAXBElement<MunderType>(_Munder_QNAME, MunderType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MalignmarkType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "malignmark")
    public JAXBElement<MalignmarkType> createMalignmark(MalignmarkType value) {
        return new JAXBElement<MalignmarkType>(_Malignmark_QNAME, MalignmarkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "in")
    public JAXBElement<InType> createIn(InType value) {
        return new JAXBElement<InType>(_In_QNAME, InType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MsqrtType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "msqrt")
    public JAXBElement<MsqrtType> createMsqrt(MsqrtType value) {
        return new JAXBElement<MsqrtType>(_Msqrt_QNAME, MsqrtType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MathType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "math")
    public JAXBElement<MathType> createMath(MathType value) {
        return new JAXBElement<MathType>(_Math_QNAME, MathType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DomainofapplicationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "domainofapplication")
    public JAXBElement<DomainofapplicationType> createDomainofapplication(DomainofapplicationType value) {
        return new JAXBElement<DomainofapplicationType>(_Domainofapplication_QNAME, DomainofapplicationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntervalType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "interval")
    public JAXBElement<IntervalType> createInterval(IntervalType value) {
        return new JAXBElement<IntervalType>(_Interval_QNAME, IntervalType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "complexes")
    public JAXBElement<ConstantType> createComplexes(ConstantType value) {
        return new JAXBElement<ConstantType>(_Complexes_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CardType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "card")
    public JAXBElement<CardType> createCard(CardType value) {
        return new JAXBElement<CardType>(_Card_QNAME, CardType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MspaceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mspace")
    public JAXBElement<MspaceType> createMspace(MspaceType value) {
        return new JAXBElement<MspaceType>(_Mspace_QNAME, MspaceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SetdiffType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "setdiff")
    public JAXBElement<SetdiffType> createSetdiff(SetdiffType value) {
        return new JAXBElement<SetdiffType>(_Setdiff_QNAME, SetdiffType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "compose")
    public JAXBElement<FunctionsType> createCompose(FunctionsType value) {
        return new JAXBElement<FunctionsType>(_Compose_QNAME, FunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "domain")
    public JAXBElement<FunctionsType> createDomain(FunctionsType value) {
        return new JAXBElement<FunctionsType>(_Domain_QNAME, FunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "exponentiale")
    public JAXBElement<ConstantType> createExponentiale(ConstantType value) {
        return new JAXBElement<ConstantType>(_Exponentiale_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "gcd")
    public JAXBElement<ArithType> createGcd(ArithType value) {
        return new JAXBElement<ArithType>(_Gcd_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoneType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "none")
    public JAXBElement<NoneType> createNone(NoneType value) {
        return new JAXBElement<NoneType>(_None_QNAME, NoneType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SemanticsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "semantics")
    public JAXBElement<SemanticsType> createSemantics(SemanticsType value) {
        return new JAXBElement<SemanticsType>(_Semantics_QNAME, SemanticsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccot")
    public JAXBElement<ElementaryFunctionsType> createArccot(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccot_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "integers")
    public JAXBElement<ConstantType> createIntegers(ConstantType value) {
        return new JAXBElement<ConstantType>(_Integers_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccos")
    public JAXBElement<ElementaryFunctionsType> createArccos(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccos_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TendstoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "tendsto")
    public JAXBElement<TendstoType> createTendsto(TendstoType value) {
        return new JAXBElement<TendstoType>(_Tendsto_QNAME, TendstoType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MglyphType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mglyph")
    public JAXBElement<MglyphType> createMglyph(MglyphType value) {
        return new JAXBElement<MglyphType>(_Mglyph_QNAME, MglyphType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "equivalent")
    public JAXBElement<RelationsType> createEquivalent(RelationsType value) {
        return new JAXBElement<RelationsType>(_Equivalent_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sech")
    public JAXBElement<ElementaryFunctionsType> createSech(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Sech_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CurlType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "curl")
    public JAXBElement<CurlType> createCurl(CurlType value) {
        return new JAXBElement<CurlType>(_Curl_QNAME, CurlType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "ident")
    public JAXBElement<FunctionsType> createIdent(FunctionsType value) {
        return new JAXBElement<FunctionsType>(_Ident_QNAME, FunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "leq")
    public JAXBElement<RelationsType> createLeq(RelationsType value) {
        return new JAXBElement<RelationsType>(_Leq_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MomentaboutType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "momentabout")
    public JAXBElement<MomentaboutType> createMomentabout(MomentaboutType value) {
        return new JAXBElement<MomentaboutType>(_Momentabout_QNAME, MomentaboutType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "exp")
    public JAXBElement<ElementaryFunctionsType> createExp(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Exp_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "factorof")
    public JAXBElement<RelationsType> createFactorof(RelationsType value) {
        return new JAXBElement<RelationsType>(_Factorof_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MtableType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mtable")
    public JAXBElement<MtableType> createMtable(MtableType value) {
        return new JAXBElement<MtableType>(_Mtable_QNAME, MtableType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "conjugate")
    public JAXBElement<ArithType> createConjugate(ArithType value) {
        return new JAXBElement<ArithType>(_Conjugate_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LambdaType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "lambda")
    public JAXBElement<LambdaType> createLambda(LambdaType value) {
        return new JAXBElement<LambdaType>(_Lambda_QNAME, LambdaType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CnType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "cn")
    public JAXBElement<CnType> createCn(CnType value) {
        return new JAXBElement<CnType>(_Cn_QNAME, CnType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UnionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "union")
    public JAXBElement<UnionType> createUnion(UnionType value) {
        return new JAXBElement<UnionType>(_Union_QNAME, UnionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "emptyset")
    public JAXBElement<ConstantType> createEmptyset(ConstantType value) {
        return new JAXBElement<ConstantType>(_Emptyset_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "notanumber")
    public JAXBElement<ConstantType> createNotanumber(ConstantType value) {
        return new JAXBElement<ConstantType>(_Notanumber_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MaligngroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "maligngroup")
    public JAXBElement<MaligngroupType> createMaligngroup(MaligngroupType value) {
        return new JAXBElement<MaligngroupType>(_Maligngroup_QNAME, MaligngroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AnnotationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "annotation")
    public JAXBElement<AnnotationType> createAnnotation(AnnotationType value) {
        return new JAXBElement<AnnotationType>(_Annotation_QNAME, AnnotationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "set")
    public JAXBElement<SetType> createSet(SetType value) {
        return new JAXBElement<SetType>(_Set_QNAME, SetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "product")
    public JAXBElement<ArithType> createProduct(ArithType value) {
        return new JAXBElement<ArithType>(_Product_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "max")
    public JAXBElement<ArithType> createMax(ArithType value) {
        return new JAXBElement<ArithType>(_Max_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "forall")
    public JAXBElement<LogicType> createForall(LogicType value) {
        return new JAXBElement<LogicType>(_Forall_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CiType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "ci")
    public JAXBElement<CiType> createCi(CiType value) {
        return new JAXBElement<CiType>(_Ci_QNAME, CiType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "exists")
    public JAXBElement<LogicType> createExists(LogicType value) {
        return new JAXBElement<LogicType>(_Exists_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UplimitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "uplimit")
    public JAXBElement<UplimitType> createUplimit(UplimitType value) {
        return new JAXBElement<UplimitType>(_Uplimit_QNAME, UplimitType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "infinity")
    public JAXBElement<ConstantType> createInfinity(ConstantType value) {
        return new JAXBElement<ConstantType>(_Infinity_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NotinType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "notin")
    public JAXBElement<NotinType> createNotin(NotinType value) {
        return new JAXBElement<NotinType>(_Notin_QNAME, NotinType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "implies")
    public JAXBElement<LogicType> createImplies(LogicType value) {
        return new JAXBElement<LogicType>(_Implies_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PartialdiffType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "partialdiff")
    public JAXBElement<PartialdiffType> createPartialdiff(PartialdiffType value) {
        return new JAXBElement<PartialdiffType>(_Partialdiff_QNAME, PartialdiffType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MrowType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mrow")
    public JAXBElement<MrowType> createMrow(MrowType value) {
        return new JAXBElement<MrowType>(_Mrow_QNAME, MrowType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MerrorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "merror")
    public JAXBElement<MerrorType> createMerror(MerrorType value) {
        return new JAXBElement<MerrorType>(_Merror_QNAME, MerrorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GradType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "grad")
    public JAXBElement<GradType> createGrad(GradType value) {
        return new JAXBElement<GradType>(_Grad_QNAME, GradType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogbaseType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "logbase")
    public JAXBElement<LogbaseType> createLogbase(LogbaseType value) {
        return new JAXBElement<LogbaseType>(_Logbase_QNAME, LogbaseType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "abs")
    public JAXBElement<ArithType> createAbs(ArithType value) {
        return new JAXBElement<ArithType>(_Abs_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NotprsubsetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "notprsubset")
    public JAXBElement<NotprsubsetType> createNotprsubset(NotprsubsetType value) {
        return new JAXBElement<NotprsubsetType>(_Notprsubset_QNAME, NotprsubsetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccosh")
    public JAXBElement<ElementaryFunctionsType> createArccosh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccosh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ScalarproductType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "scalarproduct")
    public JAXBElement<ScalarproductType> createScalarproduct(ScalarproductType value) {
        return new JAXBElement<ScalarproductType>(_Scalarproduct_QNAME, ScalarproductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AnnotationXmlType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "annotation-xml")
    public JAXBElement<AnnotationXmlType> createAnnotationXml(AnnotationXmlType value) {
        return new JAXBElement<AnnotationXmlType>(_AnnotationXml_QNAME, AnnotationXmlType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sum")
    public JAXBElement<ArithType> createSum(ArithType value) {
        return new JAXBElement<ArithType>(_Sum_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PiecewiseType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "piecewise")
    public JAXBElement<PiecewiseType> createPiecewise(PiecewiseType value) {
        return new JAXBElement<PiecewiseType>(_Piecewise_QNAME, PiecewiseType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MatrixType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "matrix")
    public JAXBElement<MatrixType> createMatrix(MatrixType value) {
        return new JAXBElement<MatrixType>(_Matrix_QNAME, MatrixType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MomentType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "moment")
    public JAXBElement<MomentType> createMoment(MomentType value) {
        return new JAXBElement<MomentType>(_Moment_QNAME, MomentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "minus")
    public JAXBElement<ArithType> createMinus(ArithType value) {
        return new JAXBElement<ArithType>(_Minus_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccsch")
    public JAXBElement<ElementaryFunctionsType> createArccsch(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccsch_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "primes")
    public JAXBElement<ConstantType> createPrimes(ConstantType value) {
        return new JAXBElement<ConstantType>(_Primes_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PrsubsetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "prsubset")
    public JAXBElement<PrsubsetType> createPrsubset(PrsubsetType value) {
        return new JAXBElement<PrsubsetType>(_Prsubset_QNAME, PrsubsetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "log")
    public JAXBElement<ElementaryFunctionsType> createLog(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Log_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arcsec")
    public JAXBElement<ElementaryFunctionsType> createArcsec(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arcsec_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "factorial")
    public JAXBElement<ArithType> createFactorial(ArithType value) {
        return new JAXBElement<ArithType>(_Factorial_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MsubsupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "msubsup")
    public JAXBElement<MsubsupType> createMsubsup(MsubsupType value) {
        return new JAXBElement<MsubsupType>(_Msubsup_QNAME, MsubsupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "power")
    public JAXBElement<ArithType> createPower(ArithType value) {
        return new JAXBElement<ArithType>(_Power_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "naturalnumbers")
    public JAXBElement<ConstantType> createNaturalnumbers(ConstantType value) {
        return new JAXBElement<ConstantType>(_Naturalnumbers_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "xor")
    public JAXBElement<LogicType> createXor(LogicType value) {
        return new JAXBElement<LogicType>(_Xor_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VectorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "vector")
    public JAXBElement<VectorType> createVector(VectorType value) {
        return new JAXBElement<VectorType>(_Vector_QNAME, VectorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SepType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sep")
    public JAXBElement<SepType> createSep(SepType value) {
        return new JAXBElement<SepType>(_Sep_QNAME, SepType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sec")
    public JAXBElement<ElementaryFunctionsType> createSec(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Sec_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "min")
    public JAXBElement<ArithType> createMin(ArithType value) {
        return new JAXBElement<ArithType>(_Min_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "geq")
    public JAXBElement<RelationsType> createGeq(RelationsType value) {
        return new JAXBElement<RelationsType>(_Geq_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccoth")
    public JAXBElement<ElementaryFunctionsType> createArccoth(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccoth_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arg")
    public JAXBElement<ArithType> createArg(ArithType value) {
        return new JAXBElement<ArithType>(_Arg_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arctanh")
    public JAXBElement<ElementaryFunctionsType> createArctanh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arctanh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DegreeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "degree")
    public JAXBElement<DegreeType> createDegree(DegreeType value) {
        return new JAXBElement<DegreeType>(_Degree_QNAME, DegreeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "eulergamma")
    public JAXBElement<ConstantType> createEulergamma(ConstantType value) {
        return new JAXBElement<ConstantType>(_Eulergamma_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "real")
    public JAXBElement<ArithType> createReal(ArithType value) {
        return new JAXBElement<ArithType>(_Real_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BvarType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "bvar")
    public JAXBElement<BvarType> createBvar(BvarType value) {
        return new JAXBElement<BvarType>(_Bvar_QNAME, BvarType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MtrType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mtr")
    public JAXBElement<MtrType> createMtr(MtrType value) {
        return new JAXBElement<MtrType>(_Mtr_QNAME, MtrType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "eq")
    public JAXBElement<RelationsType> createEq(RelationsType value) {
        return new JAXBElement<RelationsType>(_Eq_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ListType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "list")
    public JAXBElement<ListType> createList(ListType value) {
        return new JAXBElement<ListType>(_List_QNAME, ListType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "plus")
    public JAXBElement<ArithType> createPlus(ArithType value) {
        return new JAXBElement<ArithType>(_Plus_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MnType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mn")
    public JAXBElement<MnType> createMn(MnType value) {
        return new JAXBElement<MnType>(_Mn_QNAME, MnType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "image")
    public JAXBElement<FunctionsType> createImage(FunctionsType value) {
        return new JAXBElement<FunctionsType>(_Image_QNAME, FunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OtherwiseType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "otherwise")
    public JAXBElement<OtherwiseType> createOtherwise(OtherwiseType value) {
        return new JAXBElement<OtherwiseType>(_Otherwise_QNAME, OtherwiseType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "tan")
    public JAXBElement<ElementaryFunctionsType> createTan(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Tan_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mo")
    public JAXBElement<MoType> createMo(MoType value) {
        return new JAXBElement<MoType>(_Mo_QNAME, MoType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sinh")
    public JAXBElement<ElementaryFunctionsType> createSinh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Sinh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "ms")
    public JAXBElement<MsType> createMs(MsType value) {
        return new JAXBElement<MsType>(_Ms_QNAME, MsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "true")
    public JAXBElement<ConstantType> createTrue(ConstantType value) {
        return new JAXBElement<ConstantType>(_True_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arcsin")
    public JAXBElement<ElementaryFunctionsType> createArcsin(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arcsin_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MmultiscriptsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mmultiscripts")
    public JAXBElement<MmultiscriptsType> createMmultiscripts(MmultiscriptsType value) {
        return new JAXBElement<MmultiscriptsType>(_Mmultiscripts_QNAME, MmultiscriptsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DivergenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "divergence")
    public JAXBElement<DivergenceType> createDivergence(DivergenceType value) {
        return new JAXBElement<DivergenceType>(_Divergence_QNAME, DivergenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OuterproductType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "outerproduct")
    public JAXBElement<OuterproductType> createOuterproduct(OuterproductType value) {
        return new JAXBElement<OuterproductType>(_Outerproduct_QNAME, OuterproductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConditionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "condition")
    public JAXBElement<ConditionType> createCondition(ConditionType value) {
        return new JAXBElement<ConditionType>(_Condition_QNAME, ConditionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PieceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "piece")
    public JAXBElement<PieceType> createPiece(PieceType value) {
        return new JAXBElement<PieceType>(_Piece_QNAME, PieceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MedianType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "median")
    public JAXBElement<MedianType> createMedian(MedianType value) {
        return new JAXBElement<MedianType>(_Median_QNAME, MedianType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "cot")
    public JAXBElement<ElementaryFunctionsType> createCot(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Cot_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "lt")
    public JAXBElement<RelationsType> createLt(RelationsType value) {
        return new JAXBElement<RelationsType>(_Lt_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NotsubsetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "notsubset")
    public JAXBElement<NotsubsetType> createNotsubset(NotsubsetType value) {
        return new JAXBElement<NotsubsetType>(_Notsubset_QNAME, NotsubsetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arcsinh")
    public JAXBElement<ElementaryFunctionsType> createArcsinh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arcsinh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MsubType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "msub")
    public JAXBElement<MsubType> createMsub(MsubType value) {
        return new JAXBElement<MsubType>(_Msub_QNAME, MsubType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "ln")
    public JAXBElement<ElementaryFunctionsType> createLn(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Ln_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DeclareType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "declare")
    public JAXBElement<DeclareType> createDeclare(DeclareType value) {
        return new JAXBElement<DeclareType>(_Declare_QNAME, DeclareType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "cos")
    public JAXBElement<ElementaryFunctionsType> createCos(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Cos_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CsymbolType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "csymbol")
    public JAXBElement<CsymbolType> createCsymbol(CsymbolType value) {
        return new JAXBElement<CsymbolType>(_Csymbol_QNAME, CsymbolType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LimitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "limit")
    public JAXBElement<LimitType> createLimit(LimitType value) {
        return new JAXBElement<LimitType>(_Limit_QNAME, LimitType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "rem")
    public JAXBElement<ArithType> createRem(ArithType value) {
        return new JAXBElement<ArithType>(_Rem_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "neq")
    public JAXBElement<RelationsType> createNeq(RelationsType value) {
        return new JAXBElement<RelationsType>(_Neq_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arccsc")
    public JAXBElement<ElementaryFunctionsType> createArccsc(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arccsc_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MiType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mi")
    public JAXBElement<MiType> createMi(MiType value) {
        return new JAXBElement<MiType>(_Mi_QNAME, MiType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MphantomType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mphantom")
    public JAXBElement<MphantomType> createMphantom(MphantomType value) {
        return new JAXBElement<MphantomType>(_Mphantom_QNAME, MphantomType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MtdType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mtd")
    public JAXBElement<MtdType> createMtd(MtdType value) {
        return new JAXBElement<MtdType>(_Mtd_QNAME, MtdType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "rationals")
    public JAXBElement<ConstantType> createRationals(ConstantType value) {
        return new JAXBElement<ConstantType>(_Rationals_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ModeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mode")
    public JAXBElement<ModeType> createMode(ModeType value) {
        return new JAXBElement<ModeType>(_Mode_QNAME, ModeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MprescriptsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mprescripts")
    public JAXBElement<MprescriptsType> createMprescripts(MprescriptsType value) {
        return new JAXBElement<MprescriptsType>(_Mprescripts_QNAME, MprescriptsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MlabeledtrType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mlabeledtr")
    public JAXBElement<MlabeledtrType> createMlabeledtr(MlabeledtrType value) {
        return new JAXBElement<MlabeledtrType>(_Mlabeledtr_QNAME, MlabeledtrType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MpaddedType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mpadded")
    public JAXBElement<MpaddedType> createMpadded(MpaddedType value) {
        return new JAXBElement<MpaddedType>(_Mpadded_QNAME, MpaddedType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "false")
    public JAXBElement<ConstantType> createFalse(ConstantType value) {
        return new JAXBElement<ConstantType>(_False_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MfracType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mfrac")
    public JAXBElement<MfracType> createMfrac(MfracType value) {
        return new JAXBElement<MfracType>(_Mfrac_QNAME, MfracType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "codomain")
    public JAXBElement<FunctionsType> createCodomain(FunctionsType value) {
        return new JAXBElement<FunctionsType>(_Codomain_QNAME, FunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "gt")
    public JAXBElement<RelationsType> createGt(RelationsType value) {
        return new JAXBElement<RelationsType>(_Gt_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MstyleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mstyle")
    public JAXBElement<MstyleType> createMstyle(MstyleType value) {
        return new JAXBElement<MstyleType>(_Mstyle_QNAME, MstyleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "imaginaryi")
    public JAXBElement<ConstantType> createImaginaryi(ConstantType value) {
        return new JAXBElement<ConstantType>(_Imaginaryi_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "cosh")
    public JAXBElement<ElementaryFunctionsType> createCosh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Cosh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "int")
    public JAXBElement<IntType> createInt(IntType value) {
        return new JAXBElement<IntType>(_Int_QNAME, IntType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "ceiling")
    public JAXBElement<ArithType> createCeiling(ArithType value) {
        return new JAXBElement<ArithType>(_Ceiling_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InverseType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "inverse")
    public JAXBElement<InverseType> createInverse(InverseType value) {
        return new JAXBElement<InverseType>(_Inverse_QNAME, InverseType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LowlimitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "lowlimit")
    public JAXBElement<LowlimitType> createLowlimit(LowlimitType value) {
        return new JAXBElement<LowlimitType>(_Lowlimit_QNAME, LowlimitType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "reals")
    public JAXBElement<ConstantType> createReals(ConstantType value) {
        return new JAXBElement<ConstantType>(_Reals_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "or")
    public JAXBElement<LogicType> createOr(LogicType value) {
        return new JAXBElement<LogicType>(_Or_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ApplyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "apply")
    public JAXBElement<ApplyType> createApply(ApplyType value) {
        return new JAXBElement<ApplyType>(_Apply_QNAME, ApplyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arcsech")
    public JAXBElement<ElementaryFunctionsType> createArcsech(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arcsech_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntersectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "intersect")
    public JAXBElement<IntersectType> createIntersect(IntersectType value) {
        return new JAXBElement<IntersectType>(_Intersect_QNAME, IntersectType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "pi")
    public JAXBElement<ConstantType> createPi(ConstantType value) {
        return new JAXBElement<ConstantType>(_Pi_QNAME, ConstantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "csch")
    public JAXBElement<ElementaryFunctionsType> createCsch(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Csch_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TransposeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "transpose")
    public JAXBElement<TransposeType> createTranspose(TransposeType value) {
        return new JAXBElement<TransposeType>(_Transpose_QNAME, TransposeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MrootType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mroot")
    public JAXBElement<MrootType> createMroot(MrootType value) {
        return new JAXBElement<MrootType>(_Mroot_QNAME, MrootType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CartesianproductType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "cartesianproduct")
    public JAXBElement<CartesianproductType> createCartesianproduct(CartesianproductType value) {
        return new JAXBElement<CartesianproductType>(_Cartesianproduct_QNAME, CartesianproductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "approx")
    public JAXBElement<RelationsType> createApprox(RelationsType value) {
        return new JAXBElement<RelationsType>(_Approx_QNAME, RelationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DeterminantType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "determinant")
    public JAXBElement<DeterminantType> createDeterminant(DeterminantType value) {
        return new JAXBElement<DeterminantType>(_Determinant_QNAME, DeterminantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VectorproductType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "vectorproduct")
    public JAXBElement<VectorproductType> createVectorproduct(VectorproductType value) {
        return new JAXBElement<VectorproductType>(_Vectorproduct_QNAME, VectorproductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubsetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "subset")
    public JAXBElement<SubsetType> createSubset(SubsetType value) {
        return new JAXBElement<SubsetType>(_Subset_QNAME, SubsetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "quotient")
    public JAXBElement<ArithType> createQuotient(ArithType value) {
        return new JAXBElement<ArithType>(_Quotient_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MsupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "msup")
    public JAXBElement<MsupType> createMsup(MsupType value) {
        return new JAXBElement<MsupType>(_Msup_QNAME, MsupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MencloseType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "menclose")
    public JAXBElement<MencloseType> createMenclose(MencloseType value) {
        return new JAXBElement<MencloseType>(_Menclose_QNAME, MencloseType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "csc")
    public JAXBElement<ElementaryFunctionsType> createCsc(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Csc_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MoverType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mover")
    public JAXBElement<MoverType> createMover(MoverType value) {
        return new JAXBElement<MoverType>(_Mover_QNAME, MoverType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "imaginary")
    public JAXBElement<ArithType> createImaginary(ArithType value) {
        return new JAXBElement<ArithType>(_Imaginary_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VarianceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "variance")
    public JAXBElement<VarianceType> createVariance(VarianceType value) {
        return new JAXBElement<VarianceType>(_Variance_QNAME, VarianceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "arctan")
    public JAXBElement<ElementaryFunctionsType> createArctan(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Arctan_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SdevType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sdev")
    public JAXBElement<SdevType> createSdev(SdevType value) {
        return new JAXBElement<SdevType>(_Sdev_QNAME, SdevType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MeanType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mean")
    public JAXBElement<MeanType> createMean(MeanType value) {
        return new JAXBElement<MeanType>(_Mean_QNAME, MeanType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MunderoverType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "munderover")
    public JAXBElement<MunderoverType> createMunderover(MunderoverType value) {
        return new JAXBElement<MunderoverType>(_Munderover_QNAME, MunderoverType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "coth")
    public JAXBElement<ElementaryFunctionsType> createCoth(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Coth_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "sin")
    public JAXBElement<ElementaryFunctionsType> createSin(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Sin_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MfencedType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "mfenced")
    public JAXBElement<MfencedType> createMfenced(MfencedType value) {
        return new JAXBElement<MfencedType>(_Mfenced_QNAME, MfencedType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LaplacianType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "laplacian")
    public JAXBElement<LaplacianType> createLaplacian(LaplacianType value) {
        return new JAXBElement<LaplacianType>(_Laplacian_QNAME, LaplacianType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "divide")
    public JAXBElement<ArithType> createDivide(ArithType value) {
        return new JAXBElement<ArithType>(_Divide_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SelectorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "selector")
    public JAXBElement<SelectorType> createSelector(SelectorType value) {
        return new JAXBElement<SelectorType>(_Selector_QNAME, SelectorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "floor")
    public JAXBElement<ArithType> createFloor(ArithType value) {
        return new JAXBElement<ArithType>(_Floor_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "tanh")
    public JAXBElement<ElementaryFunctionsType> createTanh(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_Tanh_QNAME, ElementaryFunctionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "times")
    public JAXBElement<ArithType> createTimes(ArithType value) {
        return new JAXBElement<ArithType>(_Times_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "not")
    public JAXBElement<LogicType> createNot(LogicType value) {
        return new JAXBElement<LogicType>(_Not_QNAME, LogicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MactionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "maction")
    public JAXBElement<MactionType> createMaction(MactionType value) {
        return new JAXBElement<MactionType>(_Maction_QNAME, MactionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "root")
    public JAXBElement<ArithType> createRoot(ArithType value) {
        return new JAXBElement<ArithType>(_Root_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArithType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "lcm")
    public JAXBElement<ArithType> createLcm(ArithType value) {
        return new JAXBElement<ArithType>(_Lcm_QNAME, ArithType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementaryFunctionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1998/Math/MathML", name = "and")
    public JAXBElement<ElementaryFunctionsType> createAnd(ElementaryFunctionsType value) {
        return new JAXBElement<ElementaryFunctionsType>(_And_QNAME, ElementaryFunctionsType.class, null, value);
    }

}
